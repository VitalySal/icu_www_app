require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe LikesController, type: :controller do

  let(:user) { FactoryGirl.create :user }

  let(:news) { FactoryGirl.create :news }

  # This should return the minimal set of attributes required to create a valid
  # Like. As you add validations to Like, be sure to
  # adjust the attributes here as well.

  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # LikesController. Be sure to keep this updated too.
  let(:valid_session) { { user_id: user.id } }

  describe "POST #create" do
    context "with valid params" do
      it "creates a new Like" do
        expect {
          post :create, {news_id: news.id}, valid_session
        }.to change(NewsLike, :count).by(1)
      end
    end
  end

  describe "DELETE #destroy" do
    it "destroys the requested like" do
      like = NewsLike.create!(user: user, news: news)
      expect {
        delete :destroy, {id: like.to_param}, valid_session
      }.to change(NewsLike, :count).by(-1)
    end
  end

end
